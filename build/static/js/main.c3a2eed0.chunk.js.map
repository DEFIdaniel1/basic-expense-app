{"version":3,"sources":["components/UI/Card.js","components/Expense Filter/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Chart/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","media/expensnap-logo.png","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","yearFilter","target","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","toFixed","ExpensesList","items","length","map","e","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpenseChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","selectedYear","setSelectedYear","filteredExpenses","filter","toString","ExpenseFilter","filteredYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","valueAsNumber","onClick","disappearForm","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","src","exensnapLogo","alt","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3a2eed0.chunk.js","sourcesContent":["import './Card.css';\n\nconst Card = (props) => {\n    //adds card as a css class + inherited \"className\" elements\n    const classes = 'card ' + props.className;\n    \n    return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;","import \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n    const selectYearHandler = (event) => {\n        props.yearFilter(event.target.value);\n    };\n\n    return (\n      <div className=\"expenses-filter\">\n        <div className=\"expenses-filter__control\">\n          <label>Filter by year</label>\n          <select value={props.selected} onChange={selectYearHandler}>\n            <option value=\"2022\">2022</option>\n            <option value=\"2021\">2021</option>\n            <option value=\"2020\">2020</option>\n            <option value=\"2019\">2019</option>\n          </select>\n        </div>\n      </div>\n    );\n};\n\nexport default ExpensesFilter;","import \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const year = props.date.getFullYear();\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>{\" \"}\n      {/*could direclty put \"month\" code above, \n          best practice is cleaner JSX though; \n          putting more complex logic above*/}\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount.toFixed(2)}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;","import React from \"react\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\n  };\n\n  return <ul className=\"expenses-list\">\n      {props.items.map((e) => (\n        <ExpenseItem \n            key={e.id} \n            title={e.title} \n            amount={e.amount} \n            date={e.date} \n        />\n        ))};\n      </ul>;\n};\n\nexport default ExpensesList;","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n    //gives percent to 100 that the bar should be filled\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  //creates new array of each dataPoint object into an array of dataPoint values\n  const totalMaximum = Math.max(...dataPointValues);\n  //needs an array in math.max; using spread pulls out each element of the array\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;","import React from 'react';\nimport Chart from './Chart';\n\nconst ExpenseChart = props => {\n    const chartDataPoints = [\n        {label: 'Jan', value: 0},\n        {label: 'Feb', value: 0},\n        {label: 'Mar', value: 0},\n        {label: 'Apr', value: 0},\n        {label: 'May', value: 0},\n        {label: 'Jun', value: 0},\n        {label: 'Jul', value: 0},\n        {label: 'Aug', value: 0},\n        {label: 'Sep', value: 0},\n        {label: 'Oct', value: 0},\n        {label: 'Nov', value: 0},\n        {label: 'Dec', value: 0}\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n        //expenseMonth will be an index starting at 0 for January\n        //+= will add any amounts in that month and total them together\n    }\n\n    return <Chart dataPoints={chartDataPoints} />;\n};\n\n\n\nexport default ExpenseChart;","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"../Expense Filter/ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\"\nimport ExpenseChart from \"../Chart/ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [selectedYear, setSelectedYear] = useState(\"2022\");\n\n  const saveSelectedYear = (filteredYear) => {\n    setSelectedYear(filteredYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === selectedYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpenseFilter selected={selectedYear} yearFilter={saveSelectedYear} />\n        <ExpenseChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  //other way to have multiple useStates\n  //   const [userInput, setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  //   });\n  //   const titleChangeHandler = (event) => {\n  //     setUserInput((prevState) => {\n  //         return {...prevState, enteredTitle: event.target.value};\n  //     });\n  //   };\n  //   const amountChangeHandler = (event) => {\n  //     setUserInput((prevState) => {\n  //         return{...prevState, enteredAmount: event.target.value}\n  //     });\n  //   };\n  //   const dateChangeHandler = (event) => {\n  //     setUserInput((prevState) => {\n  //         return {...prevState, enteredDate: event.target.value};\n  //     });\n  //   };\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const titleChangeHandler = (event) => {\n    return setEnteredTitle(event.target.value);\n  };\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const amountChangeHandler = (event) => {\n    return setEnteredAmount(event.target.valueAsNumber);\n  };\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const dateChangeHandler = (event) => {\n    return setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate + \"T00:00:00\"),\n      //needed to add + T... due to timezone issue with date picker\n    };\n    props.onSaveExpenseData(expenseData);\n    //resets values to clear form fields\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.disappearForm}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, {useState} from \"react\";\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const [isEditing, setIsEditing] = useState(false);\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n    return (\n      <div className=\"new-expense\">\n        {!isEditing && (\n          <button type=\"submit\" onClick={startEditingHandler}>\n            Add New Expense\n          </button>\n        )}\n        {isEditing && (\n          <ExpenseForm\n            onSaveExpenseData={saveExpenseDataHandler}\n            disappearForm={stopEditingHandler}\n          />\n        )}\n      </div>\n    );\n}\n\nexport default NewExpense;","export default __webpack_public_path__ + \"static/media/expensnap-logo.e75985eb.png\";","import React, { useState } from \"react\"; //don't always need to do this anymore, but tells others there is JSX\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport exensnapLogo from './media/expensnap-logo.png';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: \"e5\",\n    title: \"Some frivolous expense. Whoops!\",\n    amount: 450,\n    date: new Date(2022, 5, 12),\n  },\n  {\n    id: \"e6\",\n    title: \"Bricks. Always need bricks for things.\",\n    amount: 60,\n    date: new Date(2022, 1, 13),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"logo\">\n        <img className=\"img\" src={exensnapLogo} alt=\"expensnap logo\" />\n      </div>\n      <h2>It's like SnapChat for your expenses.</h2>\n      <h2> Add, refresh, and it's gone!</h2>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}